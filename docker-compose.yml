services:
  rabbitmq:
    image: rabbitmq:4.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - SERVER_ENV=production
      - RUNNING_IN_DOCKER=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./videos:/shared/videos:ro
    extra_hosts:
      - "host.docker.internal:host-gateway" # remove after testing
    depends_on:
      rabbitmq:
        condition: service_healthy

  renderer:
    build: 
      context: ./renderer
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - OUTPUT_PATH=/shared/videos
      - TEMP_DIR=/app/temp 
    volumes:
      - ./videos:/shared/videos:rw
      - type: tmpfs 
        target: /app/temp
    depends_on:
      rabbitmq:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true

  seaweedFS:
    image: chrislusf/seaweedfs
    command: server -s3
    ports:
      - "8333:8333"
    volumes:
      - seaweedfs_data:/data
    environment:
      - WEED_FS_S3_DIR=/data
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

volumes:
  seaweedfs_data:
  rendered_videos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/videos
